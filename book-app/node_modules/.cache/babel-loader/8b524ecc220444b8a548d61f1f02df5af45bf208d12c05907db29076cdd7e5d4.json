{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamer\\\\Downloads\\\\bookBuddy\\\\book-app\\\\src\\\\components\\\\Collection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Collection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collection = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [readingStatus, setReadingStatus] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [badgesEarned, setBadgesEarned] = useState([]);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await axios.get('https://www.googleapis.com/books/v1/volumes', {\n          params: {\n            q: 'fiction',\n            key: ''\n          }\n        });\n        setBooks(response.data.items || []);\n      } catch (error) {\n        console.error('Error fetching books', error);\n      }\n    };\n    fetchBooks();\n  }, []);\n  useEffect(() => {\n    const fetchBooksFromServer = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/f'); // Modifier l'URL selon votre configuration\n        setBooks(response.data || []);\n      } catch (error) {\n        console.error('Error fetching books from server', error);\n      }\n    };\n    fetchBooksFromServer();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const fetchBookById = async id => {\n    try {\n      const response = await axios.get(`/books/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching book by ID', error);\n      throw error;\n    }\n  };\n  const handleBookDetails = async bookId => {\n    try {\n      const book = await fetchBookById(bookId);\n      console.log('Book details:', book);\n      // Faites quelque chose avec les détails du livre, par exemple, affichez-les dans une modale\n    } catch (error) {\n      console.error('Error fetching book details', error);\n      // Gérer les erreurs\n    }\n  };\n  const getBadgeForPages = totalPagesRead => {\n    const badgesEarnedCount = Math.floor(totalPagesRead / 20);\n    return `Badge ${badgesEarnedCount}`;\n  };\n  const filteredBooks = books.filter(book => {\n    var _book$volumeInfo, _book$volumeInfo$titl, _book$volumeInfo2, _book$volumeInfo2$aut;\n    const title = ((_book$volumeInfo = book.volumeInfo) === null || _book$volumeInfo === void 0 ? void 0 : (_book$volumeInfo$titl = _book$volumeInfo.title) === null || _book$volumeInfo$titl === void 0 ? void 0 : _book$volumeInfo$titl.toLowerCase()) || '';\n    const authors = ((_book$volumeInfo2 = book.volumeInfo) === null || _book$volumeInfo2 === void 0 ? void 0 : (_book$volumeInfo2$aut = _book$volumeInfo2.authors) === null || _book$volumeInfo2$aut === void 0 ? void 0 : _book$volumeInfo2$aut.map(author => author.toLowerCase()).join(', ')) || '';\n    return title.includes(searchTerm.toLowerCase()) || authors.includes(searchTerm.toLowerCase());\n  });\n  const updateReadingStatus = async (bookId, page) => {\n    try {\n      var _readingStatus$bookId;\n      // Envoi des données au backend pour mise à jour dans la base de données\n      await axios.put(`http://localhost:5000/api/statut/${bookId}`, {\n        status: ((_readingStatus$bookId = readingStatus[bookId]) === null || _readingStatus$bookId === void 0 ? void 0 : _readingStatus$bookId.status) || 'à lire plus tard',\n        currentPage: page\n      });\n      // Mise à jour de l'état local si la requête réussit\n      setReadingStatus(prevStatus => ({\n        ...prevStatus,\n        [bookId]: {\n          ...prevStatus[bookId],\n          page\n        }\n      }));\n      // Gestion des badges\n      const totalPagesRead = Object.values(readingStatus).reduce((total, book) => total + (book.page || 0), 0);\n      const badge = getBadgeForPages(totalPagesRead);\n      if (!badgesEarned.includes(badge)) {\n        setBadgesEarned(prevBadges => [...prevBadges, badge]);\n      }\n    } catch (error) {\n      console.error('Error updating reading status', error.response ? error.response.data : error.message);\n    }\n  };\n  const markAsFavorite = async bookId => {\n    try {\n      const bookToAdd = filteredBooks.find(book => book.id === bookId);\n      await axios.post('http://localhost:5000/api/favorites', {\n        title: bookToAdd.volumeInfo.title,\n        author: JSON.stringify(bookToAdd.volumeInfo.authors),\n        // categories: bookToAdd.volumeInfo.categories,\n        pages: parseInt(bookToAdd.volumeInfo.pageCount),\n        published: bookToAdd.volumeInfo.maturityRating\n      });\n      setFavorites(prevFavorites => [...prevFavorites, bookId]);\n    } catch (error) {\n      console.error('Error marking as favorite', error.response ? error.response.data : error.message);\n    }\n  };\n  const handleStatusChange = (bookId, status) => {\n    setReadingStatus(prevStatus => ({\n      ...prevStatus,\n      [bookId]: {\n        ...prevStatus[bookId],\n        status\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher par titre ou auteur\",\n        value: searchTerm,\n        onChange: handleSearch,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-grid\",\n      children: filteredBooks.map(book => {\n        var _readingStatus$book$i, _readingStatus$book$i2, _book$volumeInfo3, _book$volumeInfo4, _book$volumeInfo4$ima, _book$volumeInfo5, _book$volumeInfo6, _book$volumeInfo7, _book$volumeInfo7$aut, _book$volumeInfo8, _book$volumeInfo8$cat, _book$volumeInfo9;\n        const bookStatus = ((_readingStatus$book$i = readingStatus[book.id]) === null || _readingStatus$book$i === void 0 ? void 0 : _readingStatus$book$i.status) || 'à lire plus tard';\n        const pagesRead = ((_readingStatus$book$i2 = readingStatus[book.id]) === null || _readingStatus$book$i2 === void 0 ? void 0 : _readingStatus$book$i2.page) || 0;\n        const totalPages = ((_book$volumeInfo3 = book.volumeInfo) === null || _book$volumeInfo3 === void 0 ? void 0 : _book$volumeInfo3.pageCount) || 1;\n        const progressPercentage = pagesRead / totalPages * 100;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ((_book$volumeInfo4 = book.volumeInfo) === null || _book$volumeInfo4 === void 0 ? void 0 : (_book$volumeInfo4$ima = _book$volumeInfo4.imageLinks) === null || _book$volumeInfo4$ima === void 0 ? void 0 : _book$volumeInfo4$ima.thumbnail) || 'default-image-url.jpg',\n            className: \"book-image\",\n            alt: ((_book$volumeInfo5 = book.volumeInfo) === null || _book$volumeInfo5 === void 0 ? void 0 : _book$volumeInfo5.title) || 'No title available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"book-title\",\n              children: ((_book$volumeInfo6 = book.volumeInfo) === null || _book$volumeInfo6 === void 0 ? void 0 : _book$volumeInfo6.title) || 'No title available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-author\",\n              children: ((_book$volumeInfo7 = book.volumeInfo) === null || _book$volumeInfo7 === void 0 ? void 0 : (_book$volumeInfo7$aut = _book$volumeInfo7.authors) === null || _book$volumeInfo7$aut === void 0 ? void 0 : _book$volumeInfo7$aut.join(', ')) || 'No author available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-category\",\n              children: ((_book$volumeInfo8 = book.volumeInfo) === null || _book$volumeInfo8 === void 0 ? void 0 : (_book$volumeInfo8$cat = _book$volumeInfo8.categories) === null || _book$volumeInfo8$cat === void 0 ? void 0 : _book$volumeInfo8$cat.join(', ')) || 'No category available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-pages\",\n              children: (_book$volumeInfo9 = book.volumeInfo) !== null && _book$volumeInfo9 !== void 0 && _book$volumeInfo9.pageCount ? `${book.volumeInfo.pageCount} pages` : 'No page count available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: bookStatus,\n                onChange: e => handleStatusChange(book.id, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\\xE0 lire plus tard\",\n                  children: \"\\xC0 lire plus tard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"en cours de lecture\",\n                  children: \"En cours de lecture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"lecture finie\",\n                  children: \"Lecture finie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), bookStatus === 'en cours de lecture' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"book-badge\",\n                children: pagesRead ? getBadgeForPages(pagesRead) : 'No badge earned yet'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  style: {\n                    width: `${progressPercentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  e.preventDefault();\n                  const newPage = e.target.elements.page.value;\n                  updateReadingStatus(book.id, newPage);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"page\",\n                  placeholder: \"Derni\\xE8re page lue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Mettre \\xE0 jour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookDetails(book.id),\n              className: \"btn btn-primary\",\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markAsFavorite(book.id),\n              className: \"btn btn-secondary\",\n              children: \"Favori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Collection, \"aFIxBbAQHOEaUitX3YX4+/9HRu8=\");\n_c = Collection;\nexport default Collection;\nvar _c;\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Collection","_s","books","setBooks","searchTerm","setSearchTerm","readingStatus","setReadingStatus","favorites","setFavorites","badgesEarned","setBadgesEarned","fetchBooks","response","get","params","q","key","data","items","error","console","fetchBooksFromServer","handleSearch","event","target","value","fetchBookById","id","handleBookDetails","bookId","book","log","getBadgeForPages","totalPagesRead","badgesEarnedCount","Math","floor","filteredBooks","filter","_book$volumeInfo","_book$volumeInfo$titl","_book$volumeInfo2","_book$volumeInfo2$aut","title","volumeInfo","toLowerCase","authors","map","author","join","includes","updateReadingStatus","page","_readingStatus$bookId","put","status","currentPage","prevStatus","Object","values","reduce","total","badge","prevBadges","message","markAsFavorite","bookToAdd","find","post","JSON","stringify","pages","parseInt","pageCount","published","maturityRating","prevFavorites","handleStatusChange","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_readingStatus$book$i","_readingStatus$book$i2","_book$volumeInfo3","_book$volumeInfo4","_book$volumeInfo4$ima","_book$volumeInfo5","_book$volumeInfo6","_book$volumeInfo7","_book$volumeInfo7$aut","_book$volumeInfo8","_book$volumeInfo8$cat","_book$volumeInfo9","bookStatus","pagesRead","totalPages","progressPercentage","src","imageLinks","thumbnail","alt","categories","e","style","width","onSubmit","preventDefault","newPage","elements","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gamer/Downloads/bookBuddy/book-app/src/components/Collection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Collection.css';\r\n\r\nconst Collection = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [readingStatus, setReadingStatus] = useState({});\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [badgesEarned, setBadgesEarned] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await axios.get('https://www.googleapis.com/books/v1/volumes', {\r\n          params: {\r\n            q: 'fiction',\r\n            key: ''\r\n          }\r\n        });\r\n        setBooks(response.data.items || []);\r\n      } catch (error) {\r\n        console.error('Error fetching books', error);\r\n      }\r\n    };\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchBooksFromServer = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/f'); // Modifier l'URL selon votre configuration\r\n        setBooks(response.data || []);\r\n      } catch (error) {\r\n        console.error('Error fetching books from server', error);\r\n      }\r\n    };\r\n    fetchBooksFromServer();\r\n  }, []);\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const fetchBookById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`/books/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching book by ID', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleBookDetails = async (bookId) => {\r\n    try {\r\n      const book = await fetchBookById(bookId);\r\n      console.log('Book details:', book);\r\n      // Faites quelque chose avec les détails du livre, par exemple, affichez-les dans une modale\r\n    } catch (error) {\r\n      console.error('Error fetching book details', error);\r\n      // Gérer les erreurs\r\n    }\r\n  };\r\n\r\n  const getBadgeForPages = (totalPagesRead) => {\r\n    const badgesEarnedCount = Math.floor(totalPagesRead / 20);\r\n    return `Badge ${badgesEarnedCount}`;\r\n  };\r\n\r\n  const filteredBooks = books.filter(book => {\r\n    const title = book.volumeInfo?.title?.toLowerCase() || '';\r\n    const authors = book.volumeInfo?.authors?.map(author => author.toLowerCase()).join(', ') || '';\r\n    return title.includes(searchTerm.toLowerCase()) || authors.includes(searchTerm.toLowerCase());\r\n  });\r\n\r\n  const updateReadingStatus = async (bookId, page) => {\r\n    try {\r\n      // Envoi des données au backend pour mise à jour dans la base de données\r\n      await axios.put(`http://localhost:5000/api/statut/${bookId}`, {\r\n        status: readingStatus[bookId]?.status || 'à lire plus tard',\r\n        currentPage: page\r\n      });\r\n      // Mise à jour de l'état local si la requête réussit\r\n      setReadingStatus(prevStatus => ({\r\n        ...prevStatus,\r\n        [bookId]: { ...prevStatus[bookId], page }\r\n      }));\r\n      // Gestion des badges\r\n      const totalPagesRead = Object.values(readingStatus).reduce((total, book) => total + (book.page || 0), 0);\r\n      const badge = getBadgeForPages(totalPagesRead);\r\n      if (!badgesEarned.includes(badge)) {\r\n        setBadgesEarned(prevBadges => [...prevBadges, badge]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reading status', error.response ? error.response.data : error.message);\r\n    }\r\n  };  \r\n\r\n  const markAsFavorite = async (bookId) => {\r\n    try {\r\n      const bookToAdd = filteredBooks.find(book => book.id === bookId);\r\n      await axios.post('http://localhost:5000/api/favorites', {\r\n        title: bookToAdd.volumeInfo.title,\r\n        author: JSON.stringify(bookToAdd.volumeInfo.authors),\r\n        // categories: bookToAdd.volumeInfo.categories,\r\n        pages: parseInt(bookToAdd.volumeInfo.pageCount),\r\n        published: bookToAdd.volumeInfo.maturityRating\r\n      });\r\n      setFavorites(prevFavorites => [...prevFavorites, bookId]);\r\n    } catch (error) {\r\n      console.error('Error marking as favorite', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (bookId, status) => {\r\n    setReadingStatus(prevStatus => ({\r\n      ...prevStatus,\r\n      [bookId]: { ...prevStatus[bookId], status }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"collection-container\">\r\n      <div className=\"search-bar\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Rechercher par titre ou auteur\" \r\n          value={searchTerm} \r\n          onChange={handleSearch} \r\n          className=\"search-input\"\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"book-grid\">\r\n        {filteredBooks.map(book => {\r\n          const bookStatus = readingStatus[book.id]?.status || 'à lire plus tard';\r\n          const pagesRead = readingStatus[book.id]?.page || 0;\r\n          const totalPages = book.volumeInfo?.pageCount || 1;\r\n          const progressPercentage = (pagesRead / totalPages) * 100;\r\n\r\n          return (\r\n            <div className=\"book-card\" key={book.id}>\r\n              <img \r\n                src={book.volumeInfo?.imageLinks?.thumbnail || 'default-image-url.jpg'} \r\n                className=\"book-image\" \r\n                alt={book.volumeInfo?.title || 'No title available'} \r\n              />\r\n              <div className=\"book-details\">\r\n                <h3 className=\"book-title\">{book.volumeInfo?.title || 'No title available'}</h3>\r\n                <p className=\"book-author\">{book.volumeInfo?.authors?.join(', ') || 'No author available'}</p>\r\n                <p className=\"book-category\">{book.volumeInfo?.categories?.join(', ') || 'No category available'}</p>\r\n                <p className=\"book-pages\">{book.volumeInfo?.pageCount ? `${book.volumeInfo.pageCount} pages` : 'No page count available'}</p>\r\n                <p className=\"book-status\">\r\n                  <strong>Status:</strong>\r\n                  <select value={bookStatus} onChange={(e) => handleStatusChange(book.id, e.target.value)}>\r\n                    <option value=\"à lire plus tard\">À lire plus tard</option>\r\n                    <option value=\"en cours de lecture\">En cours de lecture</option>\r\n                    <option value=\"lecture finie\">Lecture finie</option>\r\n                  </select>\r\n                </p>\r\n                {bookStatus === 'en cours de lecture' && (\r\n                  <div>\r\n                    <p className=\"book-badge\">{pagesRead ? getBadgeForPages(pagesRead) : 'No badge earned yet'}</p>\r\n                    <div className=\"progress-bar-container\">\r\n                      <div className=\"progress-bar\" style={{ width: `${progressPercentage}%` }}></div>\r\n                    </div>\r\n                    <form onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      const newPage = e.target.elements.page.value;\r\n                      updateReadingStatus(book.id, newPage);\r\n                    }}>\r\n                      <input type=\"number\" name=\"page\" placeholder=\"Dernière page lue\" />\r\n                      <button type=\"submit\">Mettre à jour</button>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n                <button onClick={() => handleBookDetails(book.id)} className=\"btn btn-primary\">Details</button>\r\n                <button onClick={() => markAsFavorite(book.id)} className=\"btn btn-secondary\">Favori</button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}